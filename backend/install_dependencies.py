#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Hugging Face
"""

import subprocess
import sys
import os

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ {description.lower()}: {e}")
        print(f"   stderr: {e.stderr}")
        return False

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Ä—Å–∏—é Python"""
    version = sys.version_info
    if version.major < 3 or (version.major == 3 and version.minor < 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        print(f"   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {version.major}.{version.minor}.{version.micro}")
        return False
    
    print(f"‚úÖ Python –≤–µ—Ä—Å–∏—è: {version.major}.{version.minor}.{version.micro}")
    return True

def install_requirements():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ requirements.txt"""
    if not os.path.exists("requirements.txt"):
        print("‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    return run_command("pip install -r requirements.txt", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")

def test_imports():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫...")
    
    try:
        import torch
        print(f"‚úÖ PyTorch: {torch.__version__}")
        
        import transformers
        print(f"‚úÖ Transformers: {transformers.__version__}")
        
        import sentence_transformers
        print(f"‚úÖ Sentence Transformers: {sentence_transformers.__version__}")
        
        import numpy
        print(f"‚úÖ NumPy: {numpy.__version__}")
        
        import PIL
        print(f"‚úÖ Pillow: {PIL.__version__}")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def create_cache_directory():
    """–°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫—ç—à–∞ –º–æ–¥–µ–ª–µ–π"""
    cache_dir = "./models_cache"
    try:
        os.makedirs(cache_dir, exist_ok=True)
        print(f"‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫—ç—à–∞ —Å–æ–∑–¥–∞–Ω–∞: {cache_dir}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫—ç—à–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è VisuLex —Å Hugging Face")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
    if not check_python_version():
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∫—ç—à–∞
    create_cache_directory()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not install_requirements():
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–µ —É–¥–∞–ª–∞—Å—å")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    if not test_imports():
        print("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
        sys.exit(1)
    
    print("\n" + "=" * 60)
    print("üéâ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\nüí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
    print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä: python run.py")
    print("   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API: python test_api.py")
    print("   3. –û—Ç–∫—Ä—ã—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: README_HUGGINGFACE.md")
    
    print("\n‚ö†Ô∏è  –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è:")
    print("   - –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –º–æ–¥–µ–ª–∏ (~3-4GB)")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ")
    print("   - –î–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ GPU")

if __name__ == "__main__":
    main()
